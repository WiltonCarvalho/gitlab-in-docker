default:
  image: node:latest
  cache:
    paths:
      - node_modules

stages:
  - prepare_env
  - build
  - package
  - deploy
  
.openshift_job:
  image: daviestreetent/gitlab-ci-openshift
  before_script:
    - oc login $OC_URL --token=$OC_TOKEN --insecure-skip-tls-verify
    - oc project $OC_NAMESPACESLUG-dev

"Prepare OpenShift Environment (Dev)":
  extends: .openshift_job
  stage: prepare_env
  script:
    - echo "===== ENFORCING INFRASTRUCTURE OBJECTS ======="

    - oc apply --filename=./.openshift/dev --recursive=true --wait=true -n $OC_NAMESPACESLUG-dev
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always
    - when: never

"Prepare OpenShift Environment (Staging)":
  extends: .openshift_job
  stage: prepare_env
  script:
    - echo "===== ENFORCING INFRASTRUCTURE OBJECTS ======="
    - oc login $OC_URL --token=$OC_TOKEN --insecure-skip-tls-verify
    - oc project $OC_NAMESPACESLUG-staging
    - oc apply --filename=./.openshift/staging --recursive=true --wait=true -n $OC_NAMESPACESLUG-staging
  rules:
    - if: '$CI_COMMIT_REF_NAME == "staging"'
      when: always
    - when: never

"Prepare OpenShift Environment (Production)":
  extends: .openshift_job
  stage: prepare_env
  script:
    - echo "===== ENFORCING INFRASTRUCTURE OBJECTS ======="
    - oc apply --filename=./.openshift/prod --recursive=true --wait=true -n $OC_NAMESPACESLUG-prod
  rules:
    - if: '$CI_COMMIT_REF_NAME == "prod"'
      when: always
    - when: never

build:
  stage: build
  image: node:latest
  script:
    - npm install
  allow_failure: true
  artifacts:
    paths:
    - node_modules
    expire_in: 1 week

"Package Image on OCP":
  extends: .openshift_job
  stage: package
  script:
    - oc start-build openshift-spring-custom --follow --from-dir .

"Deploy Application on OCP":
  extends: .openshift_job
  stage: deploy
  when: manual
  script:
    - oc project $OC_NAMESPACESLUG-dev
    - oc rollout latest dc/openshift-test-app
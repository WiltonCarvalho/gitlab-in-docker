default:
  image:
    name: docker:20-git

stages:
  - pre_build
  - build
  - post_build
  - deploy_development
  - deploy_staging
  - deploy_production

variables:
  COMMIT_HASH: $CI_COMMIT_SHORT_SHA
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA

# bootstrap_vue:
#   stage: pre_build
#   cache:
#     key: "$CI_COMMIT_REF_SLUG"
#     untracked: true
#     #policy: push
#   before_script:
#     - env
#     - docker info
#   script:
#     - test -e package.json || docker buildx build -o . https://raw.githubusercontent.com/WiltonCarvalho/vue-app/main/Dockerfile.vue-bootstrap --progress=plain
#     - ls -lha


# build_dev_image:
#   stage: build
#   image:
#     name: docker:20-cli
#     entrypoint:
#       - sh
#       - -c
#   script:
#     - DOCKER_BUILDKIT=1 docker build -t test-dev . -f ./Dockerfile --progress=plain --target dev_image

# scan:
#   stage: post_build
#   image:
#     name: aquasec/trivy
#     entrypoint:
#       - sh
#       - -c
#   script:
#     - trivy image --scanners vuln --severity HIGH,CRITICAL --exit-code 1 test-dev

build:
  stage: build
  image: docker:20-git
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: "true"
  before_script:
    - docker version
    - docker info
  services:
    - name: docker:20-dind
      command:
        - --insecure-registry=http://registry.example.com
  script:
    - env
    - echo "$CI_REGISTRY_PASSWORD" | docker login http://$CI_REGISTRY -u "$CI_REGISTRY_USER" --password-stdin
    - IMAGE_TAG="${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}"
    - docker pull httpd
    - docker tag httpd "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"

kind:
  stage: post_build
  image:
    name: docker:20-cli
    entrypoint:
      - sh
      - -c
  script:
    - |
      set -ex
      test "$(uname -m) = x86_64" && wget https://kind.sigs.k8s.io/dl/v0.19.0/kind-linux-amd64 -O /usr/local/bin/kind
      chmod +x /usr/local/bin/kind
      api_server=$(ping -w 3 -q -c 1 docker | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]*")
      cat <<EOF> ~/kind-config.yaml
      kind: Cluster
      apiVersion: kind.x-k8s.io/v1alpha4
      networking:
        apiServerAddress: "$api_server"
        apiServerPort: 6443
      EOF
      mkdir -p ~/.kube
      kind get kubeconfig > ~/.kube/config || kind create cluster --image kindest/node:v1.27.1 --config ~/kind-config.yaml
      test "$(uname -m) = x86_64" && wget https://dl.k8s.io/release/v1.27.1/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl
      chmod +x /usr/local/bin/kubectl
      kubectl cluster-info

# push_vue:
#   image: bitnami/git
#   stage: pre_build
#   cache:
#     key: "$CI_COMMIT_REF_SLUG"
#     untracked: true
#     #policy: pull
#   # variables:
#   #   GIT_STRATEGY: none
#   script:
#     - git config --global http.sslVerify false
#     - git config --global user.name $GITLAB_USER_NAME
#     - git config --global user.email $GITLAB_USER_EMAIL
#     #- git config --global gitlab.accesstoken ${CI_GIT_TOKEN}
#     #- git push --follow-tags ${CI_REPOSITORY_URL#*@} HEAD:$CI_COMMIT_REF_NAME
#     - git add .
#     - git commit -m "VUE Bootstrap"
#     - git push "https://${GITLAB_USER_LOGIN}:kai0Eihipie3Iek7@${CI_REPOSITORY_URL#*@}" HEAD:$CI_COMMIT_REF_NAME